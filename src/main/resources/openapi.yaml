openapi: 3.0.3

info:
  title: ManagerPeople
  version: 1.0.0
  description: REST API Manager a people

paths:
  /person:
    get:
      operationId: getPerson
      summary: Consult Person
      tags:
        - Person
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonDetail'
    post:
      operationId: postPerson
      summary: Create Person
      tags:
        - Person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonInput'
      responses:
        '201':
          description: Person created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
          
  /person/{personId}:
    parameters:
      - schema:
          type: integer
          format: int64
        name: personId
        in: path
        required: true
    get:
      operationId: getPersonById
      summary: Consult Peron by Id
      tags:
        - Person
      responses:
        '200':
          description: 'Ok'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/PersonDetail'
        '404':
           $ref: '#/components/responses/NotFound'
    put:
      operationId: updatePerson
      summary: Upadate Person
      tags:
        - Person
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonInput'
      responses:
        '204':
          description: 'Person Updated'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/PersonDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        
    delete:
      operationId: removePerson
      summary: Remove Person
      tags:
        - Person
      responses:
        '204':
          description: 'Person removed'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

tags:
  - name: Person
    description: Person
          
components:
  responses:
    NotFound:
      description: 'Person not found'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
            
    BadRequest:
      description: 'Request Invalid'
      content:
        applicaiton/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
            
    InternalServerError:
      description: 'Internal Server Erro'
      content:
        applicaiton/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
  schemas:
    PersonDetail:
      description: 'Person Detail'
      required: 
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: 'João'
        cep:
          type: string
          example: '53220375'
        logradouro:
          type: string
          example: 'rua alguma coisa'
        complemento:
          type: string
          example: 'primeiro andar'
        bairro:
          type: string
          example: 'Peixinhos'
        localidade:
          type: string
          example: ''
        uf:
          type: string
          example: 'PE'
    PersonInput:
      description: 'Person input or update'
      required: 
        - name
        - cep
      type: object
      properties:
        name:
          type: string
          example: 'João'
        cep:
          type: string
          example: '0000221155'
    ErrorMessage:
      description: 'Represents Error Model'
      type: object
      properties:
        status:
          type: integer
          format: in32
          example: 400
        timestamp:
          type: string
          format: date-time
          example: '2022-11-01-T16:23:02z'
        error:
          type: string
          example: 'Person Not Found'
        message:
          type: string
          example: 'one or more invalid fields'
        path:
          type: string
          example: '/path'
        
        
        
        
        
        
        
      
