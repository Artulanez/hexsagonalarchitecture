spring:
  application:
    name: PersonAPI
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: false
  main:
    banner-mode: 'OFF'
  jackson:
    serialization:
      write_dates_as_timestamps: false
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  datasource:
    platform: h2
    url: jdbc:h2:file:~/pessoa-service
    username: sa
    password:
    driverClassName: org.h2.Driver
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    spring.mvc.patmatch.matching-strategy: ant_path_matcher
    hibernate.ddl-auto: create

info:
  app:
    name: "@project.name@"
    version: "@project.version@"
    description: "@project.description@"
    base-package: com.example.grupopan

server:
  port: 8081
  max-http-header-size: 60000

management:
  server:
    port: 8080
  context-path: /actuator
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}

resilience4j:
  retry:
    configs:
      default:
        maxRetryAttempts: 2
        waitDuration: 5000
    instances:
      global:
        baseConfig: default

grupopan:
  http:
    factory:
      habilitado: ${HTTP_FACTORY_HABILITADO:true}
      numeroDeRotas: ${HTTP_FACTORY_NUMERO_DE_ROTAS:10}
      numeroMaximoDeConexoesPorRota: ${HTTP_FACTORY_CONEXOES_PORTAS:100}
      socketTimeout: ${HTTP_FACTORY_SOCKET_TIMEOUT:5000}
      connectRequestTimeout: ${HTTP_FACTORY_REQUEST_TIMEOUT:2000}
      connectTimeout: ${HTTP_FACTORY_TIMEOUT:2000}

config:
  api:
    info: person-api
